buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
    }
    repositories {
        maven { url 'http://dev-nexus.fircosoft.net/content/groups/public/' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

    }
}

plugins {
    id "java"
    id "maven-publish"
    id "idea"
}

apply plugin: 'spring-boot'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

compileJava {
    sourceCompatibility = '1.8'
}

group = appGroup
version = System.getenv('VERSION_AND_REVISION') ? System.getenv('VERSION_AND_REVISION') : appVersion + '-SNAPSHOT'
jar {
    baseName = appName
}

repositories {
    mavenLocal()
    maven { url 'http://dev-nexus.fircosoft.net/content/groups/public/' }
}

allprojects {
    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: 2.22

    // Sirius Framework
    compile (group: 'com.accuity.sirius.core', name: 'sirius-framework', version: '0.1.6.22', changing: true) {
        transitive = true
    }
    compile(
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.boot:spring-boot-devtools')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

springBoot {
    requiresUnpack = [
            'io.swagger:swagger-jaxrs',
            'com.accuity.sirius.core:sirius-framework'
    ]
}

checkstyle {
    toolVersion = "6.14"
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}

build.dependsOn tasks.withType(GenerateMavenPom)

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

